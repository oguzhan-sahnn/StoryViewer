package com.example.insta

import android.graphics.Color
import android.os.Bundle
import android.content.Intent
import android.widget.Button
import android.widget.LinearLayout
import android.widget.TextView
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import kotlin.concurrent.thread

class StoryListActivity : AppCompatActivity() {

    private lateinit var storyContainer: LinearLayout

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_story_list)

        storyContainer = findViewById(R.id.storyContainer)

        thread {
            val activeUsers = StoryFetcher.getActiveStoryUsers()
            runOnUiThread {
                if (activeUsers != null && activeUsers.isNotEmpty()) {
                    storyContainer.orientation = LinearLayout.HORIZONTAL

                    for (user in activeUsers) {
                        val userLayout = LinearLayout(this).apply {
                            orientation = LinearLayout.VERTICAL
                            layoutParams = LinearLayout.LayoutParams(
                                LinearLayout.LayoutParams.WRAP_CONTENT,
                                LinearLayout.LayoutParams.WRAP_CONTENT
                            ).apply {
                                marginStart = 20
                                marginEnd = 20
                            }
                            gravity = android.view.Gravity.CENTER_HORIZONTAL
                        }

                        val userButton = Button(this).apply {
                            text = ""
                            setBackgroundResource(R.drawable.story_bubble_background)
                            layoutParams = LinearLayout.LayoutParams(
                                190,
                                190
                            )
                            setOnClickListener {
                                // Kullanıcının hikayelerini indir ve göster
                                downloadAndDisplayStories(user)
                            }
                        }

                        val userNameText = TextView(this).apply {
                            text = user
                            textSize = 8f
                            setTextColor(Color.BLACK)
                            layoutParams = LinearLayout.LayoutParams(
                                LinearLayout.LayoutParams.WRAP_CONTENT,
                                LinearLayout.LayoutParams.WRAP_CONTENT
                            ).apply {
                                topMargin = 5
                            }
                        }

                        userLayout.addView(userButton)
                        userLayout.addView(userNameText)
                        storyContainer.addView(userLayout)
                    }
                } else {
                    Toast.makeText(this, "Hikayeler alınamadı veya hiç aktif kullanıcı yok", Toast.LENGTH_SHORT).show()
                }
            }
        }
    }

    private fun downloadAndDisplayStories(username: String) {
        thread {
            val userId = StoryFetcher.getUserId(username)
            if (userId == null) {
                runOnUiThread {
                    Toast.makeText(this, "Kullanıcı bulunamadı!", Toast.LENGTH_SHORT).show()
                }
                return@thread
            }

            // Önce hikayeleri indiriyoruz
            StoryDownloader.downloadStories(this, userId)

            // Sonra AppStories’ten indirilenleri alıp gösteriyoruz
            val storyLinks = AppStories.getStoryLinks(userId)

            runOnUiThread {
                if (storyLinks.isNotEmpty()) {
                    val intent = Intent(this, StoryViewerActivity::class.java)
                    intent.putStringArrayListExtra("storyLinks", ArrayList(storyLinks))
                    startActivity(intent)
                } else {
                    Toast.makeText(this, "Hikaye bulunamadı!", Toast.LENGTH_SHORT).show()
                }
            }
        }
    }
}
